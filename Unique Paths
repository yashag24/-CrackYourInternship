class Solution {
public:
    void solve(int m, int n, int r, int c, int& cnt, vector<vector<int>>& dp) {
        // If out of bounds, return
        if (r >= m || c >= n) 
            return;

        if (r == m - 1 && c == n - 1) {
            cnt++;
            return;
        }

        // If the value is already calculated, use it
        if (dp[r][c] != -1) {
            cnt += dp[r][c];
            return;
        }

        int initialCnt = cnt;

        solve(m, n, r, c + 1, cnt, dp);

        solve(m, n, r + 1, c, cnt, dp);

        dp[r][c] = cnt - initialCnt;
    }

    int uniquePaths(int m, int n) {
        vector<vector<int>> dp(m, vector<int>(n, -1));
        int cnt = 0;
        solve(m, n, 0, 0, cnt, dp);
        return cnt;
    }
};
